{"ast":null,"code":"import { applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { combineReducers, createStore } from \"redux\"; // Rename the default import to whatever name we want. We can also rename a named import.\n\nimport defaultState, { firstNamedReducer, secondNamedReducer as secondState } from \"./reducers\";\nconst rootReducer = combineReducers({\n  defaultState,\n  // key name same as the carefully renamed default export\n  firstState: firstNamedReducer,\n  // specific key name instead of the variable name\n  secondState // key name same as the carefully renamed named export\n\n});\nconst reducerInitializedStore = createStore(rootReducer);\nconsole.log(reducerInitializedStore.getState()); // {defaultState : 0, firstState : 1, secondState : 2}\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/msi/Desktop/devconnectror/client/src/store.js"],"names":["applyMiddleware","composeWithDevTools","thunk","combineReducers","createStore","defaultState","firstNamedReducer","secondNamedReducer","secondState","rootReducer","firstState","reducerInitializedStore","console","log","getState","initialState","middleware","store"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C,C,CAEA;;AACA,OAAOC,YAAP,IACEC,iBADF,EAEEC,kBAAkB,IAAIC,WAFxB,QAGO,YAHP;AAKA,MAAMC,WAAW,GAAGN,eAAe,CAAC;AAClCE,EAAAA,YADkC;AACpB;AACdK,EAAAA,UAAU,EAAEJ,iBAFsB;AAEH;AAC/BE,EAAAA,WAHkC,CAGrB;;AAHqB,CAAD,CAAnC;AAMA,MAAMG,uBAAuB,GAAGP,WAAW,CAACK,WAAD,CAA3C;AACAG,OAAO,CAACC,GAAR,CAAYF,uBAAuB,CAACG,QAAxB,EAAZ,E,CACA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACd,KAAD,CAAnB;AACA,MAAMe,KAAK,GAAGb,WAAW,CACvBK,WADuB,EAEvBM,YAFuB,EAGvBd,mBAAmB,CAACD,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { combineReducers, createStore } from \"redux\";\r\n\r\n// Rename the default import to whatever name we want. We can also rename a named import.\r\nimport defaultState, {\r\n  firstNamedReducer,\r\n  secondNamedReducer as secondState,\r\n} from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  defaultState, // key name same as the carefully renamed default export\r\n  firstState: firstNamedReducer, // specific key name instead of the variable name\r\n  secondState, // key name same as the carefully renamed named export\r\n});\r\n\r\nconst reducerInitializedStore = createStore(rootReducer);\r\nconsole.log(reducerInitializedStore.getState());\r\n// {defaultState : 0, firstState : 1, secondState : 2}\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}