{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL //   USER_LOADED,\n//   AUTH_ERROR,\n//   LOGIN_SUCCESS,\n//   LOGIN_FAIL,\n//   LOGOUT,\n//   CLEAR_PROFILE,\n} from \"./types\"; //import setAuthToken from \"../utils/setAuthToken\";\n// Load User\n// export const loadUser = () => async dispatch => {\n//   if (localStorage.token) {\n//     setAuthToken(localStorage.token);\n//   }\n//   try {\n//     const res = await axios.get(\"/api/auth\");\n//     dispatch({\n//       type: USER_LOADED,\n//       payload: res.data,\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: AUTH_ERROR,\n//     });\n//   }\n// };\n// Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    }); // dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n// export const login = (email, password) => async dispatch => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   try {\n//     const res = await axios.post(\"/api/auth\", body, config);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: LOGIN_FAIL,\n//     });\n//   }\n// };\n// Logout / Clear Profile\n// export const logout = () => dispatch => {\n//   dispatch({ type: CLEAR_PROFILE });\n//   dispatch({ type: LOGOUT });\n// };","map":{"version":3,"sources":["C:/Users/msi/Desktop/devconnectror/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,CAGE;AACA;AACA;AACA;AACA;AACA;AARF,OASO,SATP,C,CAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACvE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,gBADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR,CAHE,CAOF;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACP,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD;AACF,CA5BM,C,CA8BP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  //   USER_LOADED,\r\n  //   AUTH_ERROR,\r\n  //   LOGIN_SUCCESS,\r\n  //   LOGIN_FAIL,\r\n  //   LOGOUT,\r\n  //   CLEAR_PROFILE,\r\n} from \"./types\";\r\n//import setAuthToken from \"../utils/setAuthToken\";\r\n\r\n// Load User\r\n// export const loadUser = () => async dispatch => {\r\n//   if (localStorage.token) {\r\n//     setAuthToken(localStorage.token);\r\n//   }\r\n//   try {\r\n//     const res = await axios.get(\"/api/auth\");\r\n\r\n//     dispatch({\r\n//       type: USER_LOADED,\r\n//       payload: res.data,\r\n//     });\r\n//   } catch (err) {\r\n//     dispatch({\r\n//       type: AUTH_ERROR,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    // dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\n// export const login = (email, password) => async dispatch => {\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ email, password });\r\n\r\n//   try {\r\n//     const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: res.data,\r\n//     });\r\n\r\n//     dispatch(loadUser());\r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n\r\n//     if (errors) {\r\n//       errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n//     }\r\n\r\n//     dispatch({\r\n//       type: LOGIN_FAIL,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// Logout / Clear Profile\r\n// export const logout = () => dispatch => {\r\n//   dispatch({ type: CLEAR_PROFILE });\r\n//   dispatch({ type: LOGOUT });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}